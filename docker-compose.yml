version: '3.8'

services:
  # Основное приложение
  app:
    build: .
    container_name: vera-app
    restart: unless-stopped
    env_file: .env
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    volumes:
      - ./app:/app/app
      - ./uploads:/app/uploads
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - vera-network

  # База данных PostgreSQL
  postgres:
    image: postgres:14-alpine
    container_name: vera-postgres
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - vera-network

  # Кэш Redis
  redis:
    image: redis:7-alpine
    container_name: vera-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - vera-network

  # Админка базы данных (дополнительно)
  pgadmin:
    image: dpage/pgadmin4
    container_name: vera-pgadmin
    restart: unless-stopped
    env_file: .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - vera-network

  # Мониторинг Redis (дополнительно)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: vera-redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379:0
    ports:
      - "8081:8081"
    networks:
      - vera-network

networks:
  vera-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:
