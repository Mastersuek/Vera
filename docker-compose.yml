version: '3.8'

x-buildkit: &buildkit
  cache_from:
    - type=local,src=.docker-cache/
  cache_to:
    - type=local,dest=.docker-cache-new,mode=max

services:
  # Основное приложение
  app:
    image: vera-app:latest
    container_name: vera-app
    restart: unless-stopped
    env_file: .env
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - QDRANT_URL=http://qdrant:6333
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      qdrant:
        condition: service_started # Qdrant doesn't have a simple healthcheck
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - vera-network

  # База данных PostgreSQL
  postgres:
    image: postgres:14-alpine
    container_name: vera-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: vera
      POSTGRES_PASSWORD: verapass
      POSTGRES_DB: veradb
      POSTGRES_INITDB_ARGS: "--auth-host=md5 --auth-local=trust"
      # Настройки для совместимости с приложением
      POSTGRES_SERVER: postgres
      POSTGRES_PORT: 5432
    volumes:
      - vera_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - vera-network

  # Кэш Redis
  redis:
    image: redis:7-alpine
    container_name: vera-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - vera-network

  # Админка базы данных (дополнительно)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: vera-pgadmin
    restart: unless-stopped
    env_file: .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_LISTEN_PORT: 8081
      PGADMIN_LISTEN_ADDRESS: 0.0.0.0
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5056:8081"
    depends_on:
      - postgres
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - vera-network

  # Мониторинг Redis (дополнительно)
  redis-insight:
    image: redislabs/redisinsight:latest
    container_name: vera-redis-insight
    restart: unless-stopped
    ports:
      - "5058:8001"
    environment:
      - REDIS_URLS=redis://:${REDIS_PASSWORD}@redis:6379
    depends_on:
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - vera-network

  # Векторная база данных Qdrant
  qdrant:
    image: qdrant/qdrant:v1.7.4
    container_name: vera-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - vera-network

networks:
  vera-network:
    driver: bridge

volumes:
  vera_postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  qdrant_data:
    driver: local
