

=== .gitignore ===
# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# UV
.uv/

# IDEs
.vscode/
.idea/
*.swp
*.swo
*~

# OS
.DS_Store
Thumbs.db

# Project specific
*.log
*.enc
/logs/
/secure_data/
/models/
.env.local
.env.production

# Docker
.dockerignore

# Certificates
*.pem
*.key
*.crt
ssl/

# Temporary files
tmp/
temp/

=== README.md ===
# üîÆ –ü—Ä–æ–µ–∫—Ç "–í–µ—Ä–∞" - AI-powered Data Science Platform

[![CI/CD Pipeline](https://github.com/Mastersuek/Vera/actions/workflows/ci-cd.yml/badge.svg)](https://github.com/Mastersuek/Vera/actions/workflows/ci-cd.yml)
[![Security Audit](https://github.com/Mastersuek/Vera/actions/workflows/security-audit.yml/badge.svg)](https://github.com/Mastersuek/Vera/actions/workflows/security-audit.yml)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)

## üéØ –û–ø–∏—Å–∞–Ω–∏–µ

–ü—Ä–æ–µ–∫—Ç "–í–µ—Ä–∞" - —ç—Ç–æ –∫–æ–º–ø–ª–µ–∫—Å–Ω–∞—è AI-powered –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è Data Science —Å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞–º–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –∑–∞—â–∏—Ç—ã –¥–∞–Ω–Ω—ã—Ö.

### ‚ú® –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏

- ü§ñ **AI-–∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö** —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö ML –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤
- üõ°Ô∏è **DLP (Data Loss Prevention)** - –∑–∞—â–∏—Ç–∞ –æ—Ç —É—Ç–µ—á–µ–∫ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
- üåê **–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø—Ä–æ–∫—Å–∏** —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –∫–æ–Ω—Ç–µ–Ω—Ç–∞
- üîê **–®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö** (AES-256)
- üìä **–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –∞—É–¥–∏—Ç** –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
- ‚ö° **–ë—ã—Å—Ç—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞** —Å UV package manager

## üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

### –£—Å—Ç–∞–Ω–æ–≤–∫–∞ UV

```bash
# Linux/macOS
curl -LsSf https://astral.sh/uv/install.sh | sh

# Windows
powershell -c "irm https://astral.sh/uv/install.ps1 | iex"
```

### –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫

```bash
# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
git clone https://github.com/Mastersuek/Vera.git
cd Vera

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
cp .env.example .env
# –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª

# –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ Docker Compose
docker-compose up -d

# –ò–ª–∏ –∑–∞–ø—É—Å–∫ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
cd vera-core && uv run python vera_main.py &
cd vera-proxy && uv run python advanced_proxy.py &
cd vera-dlp && uv run python advanced_dlp.py &
```

## üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

- [üìñ –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é](docs/deployment-guide.md)
- [üîí –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏](docs/security-guide.md)
- [üõ†Ô∏è API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è](docs/api-reference.md)
- [‚ùì FAQ –∏ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–ø–æ–ª–∞–¥–æ–∫](docs/troubleshooting.md)

## üõ†Ô∏è –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

```
Vera/
‚îú‚îÄ‚îÄ vera-core/              # –û—Å–Ω–æ–≤–Ω–æ–µ AI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
‚îÇ   ‚îú‚îÄ‚îÄ vera_main.py
‚îÇ   ‚îú‚îÄ‚îÄ pyproject.toml
‚îÇ   ‚îî‚îÄ‚îÄ Dockerfile
‚îú‚îÄ‚îÄ vera-proxy/             # –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø—Ä–æ–∫—Å–∏
‚îÇ   ‚îú‚îÄ‚îÄ advanced_proxy.py
‚îÇ   ‚îú‚îÄ‚îÄ pyproject.toml
‚îÇ   ‚îî‚îÄ‚îÄ Dockerfile
‚îú‚îÄ‚îÄ vera-dlp/               # DLP —Å–∏—Å—Ç–µ–º–∞
‚îÇ   ‚îú‚îÄ‚îÄ advanced_dlp.py
‚îÇ   ‚îú‚îÄ‚îÄ pyproject.toml
‚îÇ   ‚îî‚îÄ‚îÄ Dockerfile
‚îú‚îÄ‚îÄ .github/workflows/      # CI/CD –ø–∞–π–ø–ª–∞–π–Ω—ã
‚îú‚îÄ‚îÄ configs/                # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
‚îú‚îÄ‚îÄ docs/                   # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
‚îî‚îÄ‚îÄ docker-compose.prod.yml # Production —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
```

## üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å

### –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã

- ‚úÖ **Zero Trust Architecture** - –Ω–∏–∫–æ–º—É –Ω–µ –¥–æ–≤–µ—Ä—è–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
- ‚úÖ **Defense in Depth** - –º–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–∞—è –∑–∞—â–∏—Ç–∞
- ‚úÖ **Least Privilege** - –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞
- ‚úÖ **Audit Everything** - –ø–æ–ª–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π

## üìú –õ–∏—Ü–µ–Ω–∑–∏—è

–≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –ø–æ–¥ –ª–∏—Ü–µ–Ω–∑–∏–µ–π MIT. –°–º. —Ñ–∞–π–ª [LICENSE](LICENSE) –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π.

---

**üîÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–æ–µ–∫—Ç "–í–µ—Ä–∞" - –≥–¥–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —Å AI!**

=== vera-core/vera_main.py ===
#!/usr/bin/env python3
"""
–ü—Ä–æ–µ–∫—Ç "–í–µ—Ä–∞" - –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
AI-powered Data Science –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Å –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
"""

import asyncio
import json
import logging
import os
import sys
import time
import uuid
from contextlib import asynccontextmanager
from datetime import datetime
from typing import Any, Dict, List, Optional, Union

import httpx
import numpy as np
import pandas as pd
from cryptography.fernet import Fernet
from fastapi import FastAPI, HTTPException, Depends, BackgroundTasks, Request
from fastapi.middleware.cors import CORSMiddleware
from fastapi.middleware.trustedhost import TrustedHostMiddleware
from fastapi.responses import JSONResponse, HTMLResponse
from fastapi.security import HTTPBearer, HTTPAuthorizationCredentials
from pydantic import BaseModel, Field
from sklearn.cluster import KMeans, DBSCAN
from sklearn.decomposition import PCA
from sklearn.ensemble import IsolationForest, RandomForestClassifier
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.manifold import TSNE
from sklearn.metrics import silhouette_score
from sklearn.preprocessing import StandardScaler
import uvicorn

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
DLP_SERVICE_URL = os.getenv("VERA_DLP_URL", "http://vera-dlp:8081")
PROXY_SERVICE_URL = os.getenv("VERA_PROXY_URL", "http://vera-proxy:8080")
ENCRYPTION_KEY = os.getenv("VERA_ENCRYPTION_KEY", Fernet.generate_key())

# –°–æ–∑–¥–∞–Ω–∏–µ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = FastAPI(
    title="–ü—Ä–æ–µ–∫—Ç \"–í–µ—Ä–∞\"",
    description="AI-powered Data Science –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Å –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
    version="1.0.0"
)

@app.get("/", response_class=HTMLResponse)
async def root():
    return HTMLResponse(content="""
    <!DOCTYPE html>
    <html>
    <head>
        <title>–ü—Ä–æ–µ–∫—Ç "–í–µ—Ä–∞"</title>
        <meta charset="utf-8">
    </head>
    <body>
        <h1>üîÆ –ü—Ä–æ–µ–∫—Ç "–í–µ—Ä–∞"</h1>
        <p>AI-powered Data Science –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Å –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</p>
    </body>
    </html>
    """)

@app.get("/health")
async def health_check():
    return {
        "status": "healthy",
        "timestamp": datetime.now().isoformat(),
        "service": "vera-core",
        "version": "1.0.0"
    }

if __name__ == "__main__":
    uvicorn.run(
        "vera_main:app",
        host="0.0.0.0",
        port=8000,
        reload=False,
        access_log=True,
        log_level="info"
    )

=== vera-core/pyproject.toml ===
[project]
name = "vera-core"
version = "1.0.0"
description = "Vera Core - AI-powered Data Science platform"
requires-python = ">=3.10"

dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "httpx>=0.25.0",
    "pandas>=2.1.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "cryptography>=41.0.0",
    "pydantic>=2.5.0",
    "python-dotenv>=1.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

=== docker-compose.yml ===
version: '3.8'

services:
  vera-core:
    build: ./vera-core
    ports:
      - "8000:8000"
    environment:
      - VERA_ENV=development
      - VERA_DLP_URL=http://vera-dlp:8081
      - VERA_PROXY_URL=http://vera-proxy:8080
    depends_on:
      - vera-dlp
      - vera-proxy

  vera-proxy:
    build: ./vera-proxy
    ports:
      - "8080:8080"
    environment:
      - VERA_ENV=development
      - VERA_DLP_URL=http://vera-dlp:8081
    depends_on:
      - vera-dlp

  vera-dlp:
    build: ./vera-dlp
    ports:
      - "8081:8081"
    environment:
      - VERA_ENV=development

=== scripts/setup.sh ===
#!/bin/bash
set -e

echo "üîÆ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –í–µ—Ä–∞..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ UV
if ! command -v uv &> /dev/null; then
    echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ UV..."
    curl -LsSf https://astral.sh/uv/install.sh | sh
fi

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f .env ]; then
    cp .env.example .env
    echo "‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env –∏–∑ –ø—Ä–∏–º–µ—Ä–∞"
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
for service in vera-core vera-proxy vera-dlp; do
    echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è $service..."
    cd $service
    uv sync --dev
    cd ..
done

echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

=== .env.example ===
# Production Environment Variables –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ "–í–µ—Ä–∞"

# –û—Å–Ω–æ–≤–Ω—ã–µ —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª—é—á–∏
VERA_SECRET_KEY=your-super-secret-key-change-this-in-production
VERA_ENCRYPTION_KEY=your-base64-encoded-encryption-key-change-this
VERA_ACCESS_KEY=vera-access-2024-change-this

# –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
POSTGRES_PASSWORD=secure-postgres-password-change-this
POSTGRES_USER=vera
POSTGRES_DB=vera
REDIS_PASSWORD=secure-redis-password-change-this

# –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
VERA_ENV=production
IMAGE_BASE=ghcr.io/mastersuek/vera
IMAGE_TAG=latest

# DLP –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
RISK_THRESHOLD=15
VERA_ENCRYPTION_LEVEL=high
VERA_DLP_ENABLED=true
VERA_AUDIT_MODE=strict